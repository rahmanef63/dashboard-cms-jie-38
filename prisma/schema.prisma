generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  name          String
  password      String
  role          Role      @default(CLIENT)
  status        Status    @default(PENDING)
  avatar        String?
  phone         String?
  company       String?
  position      String?
  settings      UserSettings?
  projects      Project[]
  tasks         Task[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model UserSettings {
  id            String    @id @default(cuid())
  userId        String    @unique
  user          User      @relation(fields: [userId], references: [id])
  theme         Theme     @default(SYSTEM)
  language      String    @default("en")
  emailNotifications Boolean @default(true)
  pushNotifications  Boolean @default(true)
  desktopNotifications Boolean @default(true)
  timezone      String    @default("UTC")
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Project {
  id            String    @id @default(cuid())
  name          String
  description   String
  status        ProjectStatus @default(PLANNING)
  startDate     DateTime
  endDate       DateTime
  budget        Float
  clientId      String
  client        User      @relation(fields: [clientId], references: [id])
  tasks         Task[]
  documents     Document[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Task {
  id            String    @id @default(cuid())
  projectId     String
  project       Project   @relation(fields: [projectId], references: [id])
  title         String
  description   String
  status        TaskStatus @default(TODO)
  assigneeId    String
  assignee      User      @relation(fields: [assigneeId], references: [id])
  dueDate       DateTime
  priority      Priority  @default(MEDIUM)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Document {
  id            String    @id @default(cuid())
  projectId     String
  project       Project   @relation(fields: [projectId], references: [id])
  name          String
  type          String
  url           String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

enum Role {
  ADMIN
  CONSTRUCTION
  DESIGNER
  ARCHITECT
  CLIENT
}

enum Status {
  ACTIVE
  INACTIVE
  PENDING
}

enum Theme {
  LIGHT
  DARK
  SYSTEM
}

enum ProjectStatus {
  PLANNING
  IN_PROGRESS
  COMPLETED
  ON_HOLD
}

enum TaskStatus {
  TODO
  IN_PROGRESS
  REVIEW
  DONE
}

enum Priority {
  LOW
  MEDIUM
  HIGH
}